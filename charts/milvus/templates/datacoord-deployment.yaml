{{- if and .Values.dataCoordinator.enabled .Values.cluster.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "milvus.datacoord.fullname" . }}
  labels:
{{ include "milvus.labels" . | indent 4 }}
    component: "datacoord"
{{ include "milvus.ud.labels" . | indent 4 }}
  annotations:
{{ include "milvus.ud.annotations" . | indent 4 }}

spec:
  replicas: {{ .Values.dataCoordinator.replicas }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
{{ include "milvus.matchLabels" . | indent 6 }}
      component: "datacoord"
  template:
    metadata:
      labels:
{{ include "milvus.matchLabels" . | indent 8 }}
        component: "datacoord"
{{ include "milvus.ud.labels" . | indent 8 }}
      annotations:
      {{- if .Values.dataCoordinator.profiling.enabled }}
        pyroscope.io/scrape: "true"
        pyroscope.io/application-name: {{ template "milvus.datacoord.fullname" . }}
        pyroscope.io/port: "9091"
      {{- end }}
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
{{ include "milvus.ud.annotations" . | indent 8 }}
    spec:
      serviceAccountName: {{ include "milvus.serviceAccount" . }}
      {{- if .Values.image.all.pullSecrets }}
      imagePullSecrets:
      {{- range .Values.image.all.pullSecrets }}
        - name: {{ . }}
      {{- end }}
      {{- end }}
      initContainers:
      {{- if .Values.dataCoordinator.heaptrack.enabled }}
      - name: heaptrack
        command:
        - /bin/bash
        - -c
        - "cp -r /opt/heaptrack /milvus/tools"
        image: "{{ .Values.heaptrack.image.repository }}:{{ .Values.heaptrack.image.tag }}"
        imagePullPolicy: {{ .Values.heaptrack.image.pullPolicy }}
        volumeMounts:
        - mountPath: /milvus/tools
          name: tools
      {{- end }}
      - name: config
        command:
        - /cp
        - /run-helm.sh,/merge
        - /milvus/tools/run-helm.sh,/milvus/tools/merge
        image: "{{ .Values.image.tools.repository }}:{{ .Values.image.tools.tag }}"
        imagePullPolicy: {{ .Values.image.tools.pullPolicy}}
        volumeMounts:
        - mountPath: /milvus/tools
          name: tools
      containers:
      - name: datacoord
        image: "{{ .Values.image.all.repository }}:{{ .Values.image.all.tag }}"
        imagePullPolicy: {{ .Values.image.all.pullPolicy }}
        {{- if .Values.dataCoordinator.heaptrack.enabled }}
        args: [ "/milvus/tools/run-helm.sh", "/milvus/tools/heaptrack/bin/heaptrack", "milvus", "run", "datacoord" ]
        {{- else }}
        args: [ "/milvus/tools/run-helm.sh", "milvus", "run", "datacoord" ]
        {{- end }}
        env:
        {{- if .Values.dataCoordinator.heaptrack.enabled }}
        - name: LD_LIBRARY_PATH
          value: /milvus/tools/heaptrack/lib:/milvus/lib:/usr/lib
        {{- end }}
        {{- if .Values.dataCoordinator.extraEnv }}
          {{- toYaml .Values.dataCoordinator.extraEnv | nindent 8 }}
        {{- end }}
        ports:
          - name: datacoord
            containerPort: 13333
            protocol: TCP
          - name: metrics
            containerPort: 9091
            protocol: TCP
        {{- if .Values.livenessProbe.enabled }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: metrics
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.livenessProbe.successThreshold }}
          failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
        {{- end }}
        {{- if .Values.readinessProbe.enabled }}
        readinessProbe:
          httpGet:
            path: /healthz
            port: metrics
          initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.readinessProbe.successThreshold }}
          failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
        {{- end }}
        resources:
          {{- toYaml .Values.dataCoordinator.resources | nindent 10 }}
        volumeMounts:
        - name: milvus-config
          mountPath: /milvus/configs/default.yaml
          subPath: default.yaml
          readOnly: true
        - name: milvus-config
          mountPath: /milvus/configs/user.yaml
          subPath: user.yaml
          readOnly: true
        {{- if .Values.log.persistence.enabled }}
        - name: milvus-logs-disk
          mountPath: {{ .Values.log.persistence.mountPath | quote }}
          subPath: {{ .Values.log.persistence.persistentVolumeClaim.subPath | default "" }}
        {{- end }}
        - mountPath: /milvus/tools
          name: tools

    {{- if and (.Values.nodeSelector) (not .Values.dataCoordinator.nodeSelector) }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
    {{- end }}
    {{- if .Values.dataCoordinator.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.dataCoordinator.nodeSelector | indent 8 }}
    {{- end }}
    {{- if and (.Values.affinity) (not .Values.dataCoordinator.affinity) }}
      affinity:
{{ toYaml .Values.affinity | indent 8 }}
    {{- end }}
    {{- if .Values.dataCoordinator.affinity }}
      affinity:
{{ toYaml .Values.dataCoordinator.affinity | indent 8 }}
    {{- end }}
    {{- if and (.Values.tolerations) (not .Values.dataCoordinator.tolerations) }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
    {{- end }}
    {{- if .Values.dataCoordinator.tolerations }}
      tolerations:
{{ toYaml .Values.dataCoordinator.tolerations | indent 8 }}
    {{- end }}

      volumes:
      - name: milvus-config
        configMap:
          name: {{ template "milvus.fullname" . }}
      {{- if .Values.log.persistence.enabled }}
      - name: milvus-logs-disk
        persistentVolumeClaim:
          claimName: {{ .Values.log.persistence.persistentVolumeClaim.existingClaim | default (printf "%s-logs" (include "milvus.fullname" . | trunc 58)) }}
      {{- end }}
      - name: tools
        emptyDir: {}
{{- end }}
